/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 12.04.0 ] */

/* [wxMaxima: input   start ] */
kill(all);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
depends([x,y,u,v], t);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Equations of motion
   [wxMaxima: section end   ] */

/* [wxMaxima: fold    start ] */

/* [wxMaxima: comment start ]
The kinetic energy has the form
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
T(i):=1/8*m*(u[i]**2 + v[i]**2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
The potential energy has the form
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
V[1]: 1/2*c[1]*(x[2] - x[1])**2 + 1/2*c[2]*(y[4] - y[1])**2 +
 1/2*c[d]*[x[3] - x[1], y[3] - y[1]].[x[3] - x[1], y[3] - y[1]];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
V[2]: 1/2*c[1]*(x[1] - x[2])**2 + 1/2*c[2]*(y[3] - y[2])**2 +
 1/2*c[d]*[x[4] - x[2], y[4] - y[2]].[x[4] - x[2], y[4] - y[2]];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
V[3]: 1/2*c[1]*(x[4] - x[3])**2 + 1/2*c[2]*(y[2] - y[3])**2 +
 1/2*c[d]*[x[1] - x[3], y[1] - y[3]].[x[1] - x[3], y[1] - y[3]];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
V[4]: 1/2*c[1]*(x[3] - x[4])**2 + 1/2*c[2]*(y[1] - y[4])**2 +
 1/2*c[d]*[x[2] - x[4], y[2] - y[4]].[x[2] - x[4], y[2] - y[4]];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
L:ratsimp(sum(T(i) - V[i]/2, i, 1, 4));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
xx:apply(append, makelist([x[i], y[i]],i,1,4));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
uu:apply(append, makelist([u[i], v[i]],i,1,4));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
K:genmatrix(lambda([i,j], 0), 8, 8)$
M:genmatrix(lambda([i,j], 0), 8, 8)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
for i:1 thru 8 do(
    eq:ratsimp(diff(L,xx[i])) = diff(diff(L,uu[i]), t),
    eq: subst([diff(uu[i],t)=-omega^2*xx[i]], eq),
    for j:1 thru 8 do(
        K[i,j] : diff(lhs(eq),xx[j]),
        M[i,j] : diff(rhs(eq),xx[j])
    )
);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
And the corresponding matrices are
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
K;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
M;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: fold    end   ] */

/* [wxMaxima: section start ]

   [wxMaxima: section end   ] */

/* [wxMaxima: comment start ]
In this case we don't need to make the row/column operations
on the mass matrix, since it is an identity matrix (times a
constant).
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Row 2 and 3 by exp(-%i*kx*a)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
M1: matrix(
 [1,0,0,0,0,0,0,0], 
 [0,1,0,0,0,0,0,0], 
 [0,0,exp(-%i*kx*a),0,0,0,0,0], 
 [0,0,0,exp(-%i*kx*a),0,0,0,0], 
 [0,0,0,0,exp(-%i*kx*a),0,0,0], 
 [0,0,0,0,0,exp(-%i*kx*a),0,0], 
 [0,0,0,0,0,0,1,0], 
 [0,0,0,0,0,0,0,1]
)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
K2:M1.K.ctranspose(M1);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
row 3 and 4 by exp(-%i*ky*b)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
M2: matrix(
 [1,0,0,0,0,0,0,0], 
 [0,1,0,0,0,0,0,0], 
 [0,0,1,0,0,0,0,0], 
 [0,0,0,1,0,0,0,0], 
 [0,0,0,0,exp(-%i*ky*b),0,0,0], 
 [0,0,0,0,0,exp(-%i*ky*b),0,0], 
 [0,0,0,0,0,0,exp(-%i*ky*b),0], 
 [0,0,0,0,0,0,0,exp(-%i*ky*b)]
)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
K3:M2.K2.ctranspose(M2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
rows 3,5,7 added to 1 and rows 4,6,8, to 2
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
S1: matrix(
 [1,0,1,0,1,0,1,0], 
 [0,1,0,1,0,1,0,1], 
 [0,0,1,0,0,0,0,0], 
 [0,0,0,1,0,0,0,0], 
 [0,0,0,0,1,0,0,0], 
 [0,0,0,0,0,1,0,0], 
 [0,0,0,0,0,0,1,0], 
 [0,0,0,0,0,0,0,1]
)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
K4:S1.K3.transpose(S1);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
M2:S1.M.transpose(S1);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
del rows 3 to 8
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
D:matrix(
[1,0,0,0,0,0,0,0],
[0,1,0,0,0,0,0,0]
);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
K5:trigrat(D.K4.transpose(D));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
M3:D.M2.transpose(D);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
Keff:invert(M3).(K5),expand;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
omega_1:expand(trigexpand(rhs(solve(Keff[1,1] - 1 = 0, omega^2)[1])));
omega_2:expand(trigexpand(rhs(solve(Keff[2,2] - 1 = 0, omega^2)[1])));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
aux:subst([c[1]=10, c[2]=0, c[d]=3, b=1, a=1, m=1],omega_1);
aux2:subst([c[1]=0, c[2]=0, c[d]=10, b=1, a=1, m=1],omega_2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
wxcontour_plot(sqrt(aux), [kx,-%pi/2,%pi/2], [ky,-%pi/2,%pi/2],[legend,false],
                 [colorbox, true], [gnuplot_preamble, "set cntrparam levels 10"]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
wxcontour_plot(sqrt(aux2), [kx,-%pi/2,%pi/2], [ky,-%pi/2,%pi/2],[legend,false],
                 [colorbox, true], [gnuplot_preamble, "set cntrparam levels 10"]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
eigenvectors(Keff*omega^2)[2];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
plot3d(sqrt(aux2), [kx,-%pi,%pi], [ky,-%pi,%pi], [grid,100,100])$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
omega: sqrt(omega_1 + omega_2);
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
