/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 12.04.0 ] */

/* [wxMaxima: input   start ] */
kill(all);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
depends([x,y,u,v], t);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Make horizontal and vertical springs equal
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
c[1]:c[s];
c[2]:c[s];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Equations of motion
   [wxMaxima: section end   ] */

/* [wxMaxima: comment start ]
The kinetic energy has the form
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
T(i):=1/8*m[i]*(u[i]**2 + v[i]**2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
The potential energy has the form
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
V[1]: 1/2*c[1]*(x[2] - x[1])**2 + 1/2*c[2]*(y[4] - y[1])**2 +
 1/2*c[d]*[x[5] - x[1], y[5] - y[1]].[x[5] - x[1], y[5] - y[1]];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
V[2]: 1/2*c[1]*(x[1] - x[2])**2 + 1/2*c[2]*(y[3] - y[2])**2 +
 1/2*c[d]*[x[5] - x[2], y[5] - y[2]].[x[5] - x[2], y[5] - y[2]];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
V[3]: 1/2*c[1]*(x[4] - x[3])**2 + 1/2*c[2]*(y[2] - y[3])**2 +
 1/2*c[d]*[x[5] - x[3], y[5] - y[3]].[x[5] - x[3], y[5] - y[3]];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
V[4]: 1/2*c[1]*(x[3] - x[4])**2 + 1/2*c[2]*(y[1] - y[4])**2 +
 1/2*c[d]*[x[5] - x[4], y[5] - y[4]].[x[5] - x[4], y[5] - y[4]];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
V[5]: 1/2*c[d]*[x[5] - x[1], y[5] - y[1]].[x[5] - x[1], y[5] - y[1]]+
1/2*c[d]*[x[2] - x[5], y[2] - y[5]].[x[2] - x[5], y[2] - y[5]] +
1/2*c[d]*[x[5] - x[3], y[5] - y[3]].[x[5] - x[3], y[5] - y[3]] +
 1/2*c[d]*[x[5] - x[4], y[5] - y[4]].[x[5] - x[4], y[5] - y[4]];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
m:[m1,m1,m1,m1,4*m2];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
L:ratsimp(sum(T(i) - V[i]/2, i, 1, 5));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
xx:apply(append, makelist([x[i], y[i]],i,1,5));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
uu:apply(append, makelist([u[i], v[i]],i,1,5));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
K:genmatrix(lambda([i,j], 0), 10, 10)$
M:genmatrix(lambda([i,j], 0), 10, 10)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
for i:1 thru 10 do(
    eq:ratsimp(diff(L,xx[i])) = diff(diff(L,uu[i]), t),
    eq: subst([diff(uu[i],t)=-omega^2*xx[i]], eq),
    for j:1 thru 10 do(
        K[i,j] : diff(lhs(eq),xx[j]),
        M[i,j] : diff(rhs(eq),xx[j])
    )
);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
And the corresponding matrices are
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
K;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
M;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]

   [wxMaxima: section end   ] */

/* [wxMaxima: comment start ]
In this case we don't need to make the row/column operations
on the mass matrix, since it is an identity matrix (times a
constant).
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Row 2 and 3 by exp(-%i*kx*a)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
M1: genmatrix(lambda([i,j], if i=j then
        (if i>=3 and i<=6 then exp(-%i*kx*a) else 1) else 0), 10, 10);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
K2:M1.K.ctranspose(M1);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
row 3 and 4 by exp(-%i*ky*b)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
M2: genmatrix(lambda([i,j], if i=j then
        (if i>=5 and i<=8 then exp(-%i*ky*b) else 1) else 0), 10, 10);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
K3:M2.K2.ctranspose(M2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
rows 3,5,7 added to 1 and rows 4,6,8, to 2
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
S1: genmatrix(lambda([i,j], 
    if i=j then 1 
    else
        if (i=1 and (j=3 or j=5 or j=7)) or (i=2 and (j=4 or j=6 or j=8))
             then 1 
    else 0),
    10, 10);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
K4:S1.K3.transpose(S1);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
M2:S1.M.transpose(S1);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
del rows 3 to 8
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
D: genmatrix(lambda([i,j], if (i=1 and j=1) or (i=2 and j=2) or 
                              (i=3 and j=9) or (i=4 and j=10) 
then 1 else 0), 4, 10);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
D.K4.transpose(D),factor;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
K5:trigrat(D.K4.transpose(D));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
M3:D.M2.transpose(D);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
Keff:invert(M3/omega^2).(K5),expand;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
evals:eigenvalues(Keff)[1]$
evecs:eigenvectors(Keff)[2]$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
wlin1: taylor(subst([b=1,a=1],evals[1]), [kx, ky], 0, 2),ratsimp;
wlin2: taylor(subst([b=1,a=1],evals[3]), [kx, ky], 0, 2),ratsimp;
wlin3: taylor(subst([b=1,a=1],evals[2]), [kx, ky], 0, 2),ratsimp;
wlin4: taylor(subst([b=1,a=1],evals[4]), [kx, ky], 0, 2),ratsimp;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Thus, the dispersion for the lower modes is
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
w2_low = factor(wlin1 + wlin2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Dispersion for the higher modes is
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
w2_hi = factor(wlin3 + wlin4),ratsimp;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
What about the eigenvectors
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
vlin1: taylor(subst([b=1,a=1], evecs[1][1]), [kx, ky], 0, 2),ratsimp;
vlin2: taylor(subst([b=1,a=1], evecs[3][1]), [kx, ky], 0, 2),ratsimp;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
And the other two
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
vlin3: taylor(subst([b=1,a=1], evecs[2][1]), [kx, ky], 0, 2),ratsimp;
vlin4: taylor(subst([b=1,a=1], evecs[4][1]), [kx, ky], 0, 2),ratsimp;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
What about orthogonality?
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
vlin1.vlin2;
vlin1.vlin3;
vlin1.vlin4;
vlin2.vlin3;
vlin2.vlin4;
vlin3.vlin4;
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
